package chapter13;

import java.util.*;
import java.util.Map.Entry;

public class HashMapExample {
	public static void main(String[] args) {
		Map<String, Integer> map = new HashMap<>();
		map.put("신용권", 85);
		map.put("홍길동", 90);
		map.put("동장군", 80);
		map.put("홍길동", 95); // 홍길동 키가 같기 때문에 제일 마지막에 저장한 값으로 대체
		System.out.println("총 Entry 수: " + map.size());

		// 가장 일반적인 데이터 검색
		System.out.println("\t홍길동의 점수: " + map.get("홍길동"));
		// 모든 데이터 찾기

		System.out.println("-------------------엔트리--------------------------------");
		// 1. Entry를 이용하는 방식
		Set<Entry<String, Integer>> entrySet = map.entrySet();
		Iterator<Entry<String, Integer>> iterator = entrySet.iterator();
		while (iterator.hasNext()) {
			Map.Entry<String, Integer> entry = iterator.next();
			System.out.println(entry);
		}
		System.out.println("-------------------foreach--------------------------------");
		// 1-2. foreach를 이용하는 방식
		for (Entry<String, Integer> entry : entrySet) {
			System.out.println(entry);
		}

		System.out.println("-------------------set.foreach--------------------------------");
		// 1-3 set의 ForEach 메소드를 호출하는 방식
		entrySet.forEach(System.out::println);

		// 2. key를 이용하는 방식
		System.out.println("--------------------키값---------------------");
		for (String string : map.keySet()) {
			System.out.println(string);
		} // 키 집합
		Set<String> keySet = map.keySet();
		// 2-1. iterator
		Iterator<String> it = keySet.iterator();
		while (it.hasNext()) {
			String key = it.next();
			System.out.println(key + "=" + map.get(key));

		}
		// 2-2. foreach
		for (String key : keySet) {
			System.out.println(map.get(key));
		}
		// map 안에 데이터 확인
		System.out.println(map); // key = value, key= value
		// 3. value를 이용하는 방식
		Collection<Integer> values = map.values();
		for (Integer value : values) {
			System.out.println(value);
		}
	}
}


























