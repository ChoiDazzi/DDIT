package kr.or.ddit.basic;

import java.util.HashSet;

public class SetTest {
	public static void main(String[] args) {
		/*
		 * List 와 Set 의 차이점 
		 * 1. List 
		 * 		- 데이터의 순서 (index)가 있다.
		 * 		- 중복되는 데이터를 저장할 수 있다. 
		 * 
		 * 2. Set 
		 * 		- 데이터의 순서 (index)가 없다. 
		 * 		- 중복되는 데이터를 저장할 수 없다.  
		 */
		
		HashSet hs1 = new HashSet();
	
		//Set 에 데이터를 추가할 때도 add() 메서드를 사용한다. 
		hs1.add("DD");
		hs1.add("AA");
		hs1.add(2);
		hs1.add("CC");
		hs1.add("BB");
		hs1.add(1);
		hs1.add(3);
		
		System.out.println("Set의 개수: " + hs1.size());
		System.out.println("Set데이터 => " + hs1 );
		
		// Set에 중복되는 데이터를 추가하면 false 를 반환하고 데이터는 추가하지 않는다.
		boolean isAdd=hs1.add("FF");
		System.out.println("중복되지 않을 때: " + isAdd);
		System.out.println("Set데이터 => " + hs1 );

		isAdd=hs1.add("CC");
		System.out.println("중복될 때: " + isAdd);
		System.out.println("Set데이터 => " + hs1 );
		
		// Set 의 데이터를 수정하려면  수정하는 명령이 따로 없기 때문에 해당 자료를 삭제한 후 추가해주는 방법을 이용한다.
		
		// 삭제하는 메서드: remove(삭제할 자료) => 반환값: 삭제 성공 (true) / 삭제 실패 (false)
		// 전체 데이터 삭제: clear()
		//"FF" 데이터를 "EE" 로 변경하기
		hs1.remove("FF");
		System.out.println("삭제 후 Set데이터 => " + hs1 );
		hs1.add("EE");
		System.out.println("Set데이터 => " + hs1 );
		hs1.clear()
		System.out.println("Set데이터 => " + hs1 );
		
		
	}
}
