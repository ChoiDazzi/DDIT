package kr.or.ddit.basic;

/*
 		📌 Thread의 stop() 메서드를 호출하면 해당 스레드가 바로 멈춘다. 
 	 		 이 때, 사용하던 자원을 정리하지 못하고 해당 쓰레드가 종료되어 다른 쓰레드가 실행되는데 영향을 줄 수 있다.
 	 		 (즉, 교착상태가 될 수 있다.)
 	 		 그래서 stop() 메서드는 비추천으로 되어 있다...
 */

public class ThreadTest11 {
	public static void main(String[] args) {
		/*
		ThreadStopTest1 th1 = new ThreadStopTest1();
		th1.start();
		
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
//		th1.stop();
		th1.setStop(true);
	*/
	//
	}
}

// 쓰레드를 멈추게 하는 연습용 쓰레드 
class ThreadStopTest1 extends Thread {
	private boolean stop;

	public void setStop(boolean stop) {
		this.stop = stop;
	}

	@Override
	public void run() {
		while (!stop) {
			System.out.println("쓰레드 실행 중...");
		} 
		
		System.out.println("자원 정리...");
		System.out.println("쓰레드 종료...");
	}
}

// interrupt() 메서드를 이용하여 쓰레드를 멈추게 하는 연습용 쓰레드 
class ThreadStopTest2 extends Thread {
	@Override
	public void run() {
		// 방법 1) interrupt() 메서드와 sleep() 메서드를 이용하는 방법 
		try {
			while(true) {
				System.out.println("작업 실행 중...");
			}
		}
	}
}